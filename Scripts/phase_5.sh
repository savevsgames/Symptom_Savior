# PHASE 5: Analytics & Insights
gh issue create --title "Implement Trends screen with symptom analytics charts" --body "Description: Create a new screen to visualize the users symptom data over time providing insights at a glance. This Trends screen will show charts or graphs of the symptom logs helping identify patterns such as frequency of symptoms average severity over weeks etc. For MVP implement a simple chart: for example a line chart of the number of symptoms logged per day over the last 2 weeks or average severity per day. Use a React Native chart library like react-native-svg or a lightweight charts component to render this. Alternatively if not using a library one could use pure SVG to draw a basic line or bar graph. The View Trends button from Dashboard and Symptoms should navigate to this screen. Specifically include: A trend of symptom frequency: e.g. a bar for each day of the past week indicating how many symptoms were logged that day. Optionally a severity trend: e.g. average severity per day or a line chart of severity of a particular symptom over time maybe allow filtering by symptom type. Possibly a pie chart of symptom categories which symptom occurred most. Keep it simple: perhaps start with one chart like symptom count by day. Label the axes clearly and use the apps color theme maybe the primary blue for bars etc. The data comes from user_symptoms you can fetch all of a users symptoms or those in last N days and aggregate in JS. Alternatively use Supabase SQL with grouping but doing in JS is fine for small data. Also ensure the Trends screen has some interpretation text. For example: You logged 5 symptoms this week up from 3 last week or Most frequent symptom: Headache 4 times. This can be static analysis to start. File Paths: app/(tabs)/trends.tsx if adding as a separate tab but original design had only 4 tabs. Alternatively not as a permanent tab but a screen accessible via Dashboards button. We can put it in root as app/trends.tsx and push to it. Or include in app/(tabs)/symptoms/trends.tsx. Choose a route and ensure buttons navigate correctly. Using root route might be simplest /trends. Component Reuse: If a chart library is used not much reuse. Possibly reuse SymptomCard for any list of key stats or base text for labels. Data Sources: Supabase user_symptoms read all or recent data. For example fetch all symptom entries for the user then in JavaScript compute counts per day or per type. If data set is large consider limiting to last 30 days or so. Expo Router Navigation: Connect the View Trends buttons: on Dashboard quick action on Symptoms stats View Trends card to navigate to this Trends screen. Provide a back arrow to go back if its not a tab. If making it a new tab one could incorporate it into the Tabs layout but then design gets 5 tabs which might be fine. Alternatively use a modal. For simplicity treat it as a pushed screen. Acceptance Criteria: 1. The user can access a Trends screen that displays at least one meaningful chart or graph about their symptoms. 2. The data shown is accurate relative to their logged symptoms. For example if they logged 2 symptoms yesterday and 1 today the chart reflects that. 3. The visual is clear and labeled e.g. dates on x-axis count on y-axis legend if multiple series. It doesnt need to be fancy but should be understandable. 4. Performance is acceptable: computing the aggregates and rendering the chart should not freeze the app even with moderate data tens of entries. 5. Bonus: The screen can also display a brief summary insight like the static Weekly Summary card on Profile. For instance This week vs last week comparison. This can reuse pattern recognition from next issue or be a simple count difference." --label "phase:5,frontend,expo"

gh issue create --title "Add pattern recognition for symptom trends and insights" --body "Description: Implement logic or AI analysis to identify patterns in the users symptoms and provide insights. This goes beyond raw charts to actionable or noticeable trends. Examples of patterns to detect: Frequent Symptom: e.g. You have logged headaches 5 times this month mostly occurring in the mornings. Trigger correlation: e.g. Stress appears 3 times as a trigger for your symptoms. Severity trend: e.g. Your average symptom severity has decreased from 4 to 2 over the past two weeks. Adherence: e.g. You logged symptoms on 10 out of 14 days 71% consistency. To implement process the user_symptoms data and possibly medical_consultations to find such patterns. You can do a simple count and comparison for some or even employ a heuristic: for triggers tally frequency of each trigger and highlight the top one. For time patterns check if certain times of day or days of week have more logs requires timestamp analysis. Given time constraints implement a couple of straightforward ones: Identify the most common symptom logged and how many times. Identify the most common trigger word in triggers text. Compute change in logging frequency or severity over two periods last 7 days vs prior 7 days. If an AI model is available like calling TxAgent in a special mode with all user data that could produce a summary but that might be too heavy. Instead code these rules. Display the insights on the Trends screen or Profiles Health Insights section. For example replace the static text Keep up the work improved 15% with a real stat. Also you can list pattern findings as bullet points on Trends screen or an Insights screen. Ensure these calculations run when the user opens the Trends screen or on app launch and stored. If data grows might consider doing it in SQL. But for MVP JS is fine. File Paths: Possibly in app/(tabs)/trends.tsx directly compute after fetching data. Or a separate hook useSymptomInsights userId that returns insights. Also update app/(tabs)/profile.tsx to show the computed Patterns Found number e.g. count of insights or distinct patterns identified currently its static 8. We can define pattern as any notable insight found; count them like if we find 3 bullet points thats 3 patterns. Component Reuse: Use base text to display insights. If listing multiple insights maybe reuse a simple Card style for each insight bullet. Data Sources: Supabase user_symptoms and possibly medical_consultations if we want to use AI usage data not necessary now. All analysis is on the client unless we decide to do a remote AI summary not doing that for now. Expo Router Navigation: N/A the insights appear within existing screens. If on Trends screen just there; also perhaps update the Profile Health Insights card with one key insight from the week. Acceptance Criteria: 1. The app surfaces at least a couple of personalized insights about the users symptoms. For instance it might say Most frequent symptom: Headache 5 times or Common trigger: Lack of Sleep appeared in 3 entries. 2. These insights are derived from actual data and update when data changes log more symptoms and see different results. 3. The Profile screens Health Insights section is no longer hardcoded at least one element like weekly improvement or pattern count is real. For example Wellness score improved by X% could be calculated if we define wellness as 10 - avg severity or a similar metric. 4. The user finds these insights useful and understandable. They should highlight something non-obvious that the raw data alone doesnt immediately show e.g. bring attention to a repeating trigger or an improvement/decline trend. 5. The calculations dont significantly slow down the app. If necessary they run asynchronously or on a background thread. Given likely small data volume it should be fine." --label "phase:5,ai,backend"

# # CREATED - JUNE 19 - 2025
# Creating issue in savevsgames/Symptom_Savior
# https://github.com/savevsgames/Symptom_Savior/issues/21
# Creating issue in savevsgames/Symptom_Savior
# https://github.com/savevsgames/Symptom_Savior/issues/22